name: build and deploy ci

on:
  push: # push 时触发ci
    branches: [main] # 作用于main分支
  # pull_request:
  #   branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      # 拉取main分支代码
      - name: Checkout
        uses: actions/checkout@v2

      # 指定nodejs版本
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      # 安装依赖
      - name: install
        run: npm install

      # 打包
      - name: build
        run: npm run build:pro

      # 部署到gh-pages分支
      - name: deploy
        if: success()
        # https://github.com/marketplace/actions/github-pages
        uses: crazy-max/ghaction-github-pages@v2.5.0
        with:
          target_branch: gh-pages
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # 制作docker镜像并推送到docker hub
      - name: build and push image to docker hub
        run: |
          echo "build and push start==>"
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker image build -t blog:latest .
          docker tag blog:latest srect/blog:latest
          docker push srect/blog:latest

      # 登录远程服务器，拉取镜像，制作并重启容器
      # https://github.com/marketplace/actions/remote-ssh-commands
      - name: ssh deploy
        uses: fifsky/ssh-action@master
        with:
          command: |
            cd /
            echo -e "1.docker login start==>"
            docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}

            echo -e "2.docker stop container==>"
            docker container stop webpack5

            echo -e "3.docker conatainer rm==>"
            docker container rm webpack5

            echo -e "4.docker image rm==>"
            docker image rm srect/blog:latest

            echo -e "5.docker hub pull image==>"
            docker pull srect/blog:latest

            echo -e "6.docker container create and start==>"
            docker container run -d -p 8000:80 --name webpack5 srect/blog:latest

            echo -e "7.deploy success==>"
          host: ${{ secrets.HOST }}
          user: ${{ secrets.USER }}
          pass: ${{ secrets.PASSWORD }}
